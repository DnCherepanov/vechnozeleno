.editor__header {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  height: 2.5em;
  border-radius: 4px 4px 0 0;
  border: 1px solid $base-color-light;
  a {
    line-height: 0;
    padding: 0 0.25rem;
  }
}
.editor__content .ProseMirror {
  max-height: 40em;
  min-height: 8em;
  padding: calc(0.75em - 1px);
  resize: vertical;
  background-color: $white;
  border-radius: 0 0 4px 4px;
  border: 1px solid #f1f2f2;
  &:hover {
    border-color: #b5b5b5;
  }
  &:focus,
  &:active {
    border-color: #4a4a4a;
    outline: none;
  }
}

.b-numberinput input[type='number'] {
  border: none;
  padding: 0;
}

.field {
  &.has-check {
    .field-body {
      margin-top: $default-padding * 0.125;
    }
  }
  .control {
    .mdi-24px.mdi-set,
    .mdi-24px.mdi::before {
      font-size: inherit;
    }
  }
}

.upload {
  .upload-draggable {
    display: block;
  }
}

.input,
.textarea,
select {
  box-shadow: none;

  &:focus,
  &:active {
    box-shadow: none !important;
  }
}

.button.is-static {
  background-color: transparent;
}

.b-checkbox.checkbox input[type='checkbox'],
.b-radio.radio input[type='radio'] {
  & + .check {
    border: $checkbox-border;
  }
}

.b-slider {
  .b-slider-track {
    background: transparent;
    border: 1px solid $base-color;
  }

  @each $state-class, $state-color, $state-text in $state-colors {
    &.is-#{$state-class} {
      .b-slider-track {
        border: 1px solid $state-color;
      }
    }
  }
}
